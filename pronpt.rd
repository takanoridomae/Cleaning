あなたは経験豊富なWebシステム開発の専門家です。
以下の要件に基づき、エアコンクリーニング完了報告書システムのシステム構成案、
および推奨されるディレクトリ構造案を提案してください。

**システム概要:**
エアコンクリーニング作業の完了報告書を作成・管理するための社内Webシステム。
顧客情報、物件情報、報告書情報を一元管理し、報告書作成業務を効率化する。

**使用技術:**
* フロントエンド: HTML, CSS, JavaScript
* バックエンド: Python (Flaskフレームワークを使用)
* データベース: SQLite

**必須機能:**
1.  **メインメニュー:** 各管理機能へのナビゲーションを提供する。
2.  **お客様管理:**
    * お客様情報の登録、編集、削除、一覧表示。
3.  **物件管理:**
    * 物件情報の登録、編集、削除、一覧表示。
    * お客様情報との紐付け。
4.  **報告書管理:**
    * 報告書の新規作成、編集、削除、一覧表示。
    * 報告書と物件情報の紐付け。
    * 報告書ステータス管理（作成中、完了など）。
5.  **報告書作成・表示機能:**
    * **報告書表紙:** （内容は後で決めるが、表示エリアと基本的な情報（顧客名、物件名、日付など）は必要）
    * **写真比較:**
        * 「施工前写真」と「施工後写真」を**対（横並びなど）**で表示する機能。
        * 写真データは特定の**フォルダ**から参照し、
        報告書作成時に**入力者（ユーザー）がフォルダ内の写真を選択**して紐付ける。
        * （※入力者選択については、ファイルアップロード後の選択なのか、
        既にアップロード済みのリストからの選択なのか、詳細なUIイメージがあれば補足）

**システム構造に関する要望:**
* **ディレクトリ構造:** フロントエンド、バックエンド、設定ファイル、静的ファイル（CSS/JS/画像）、テンプレートファイルなどを論理的に**明確に分ける**こと。
* **画面遷移:** メインメニューから各管理機能（お客様管理、物件管理、報告書管理）へ遷移し、
それぞれの処理（一覧、登録、編集など）は**新たな画面（ページ）**として構成する。単一ページアプリケーション（SPA）ではなく、伝統的なマルチページアプリケーション（MPA）に近い構成を想定する。

**回答に含めてほしい内容:**
1.  システム全体の高レベルな構成案（各モジュール/機能の関係性など）。
2.  推奨されるディレクトリ構造案（具体的なフォルダ構成と主要ファイル名）。
3.  各機能（特に写真比較）を実装する上での技術的な考慮事項や課題。
4.  今後の開発ステップに関する簡単なアドバイス。

よろしくお願いいたします。